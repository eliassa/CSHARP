using Microsoft.CSharp;
using System;
using System.CodeDom;
using System.CodeDom.Compiler;
using System.IO;

namespace Types
{
    public class CodeDOMstuff
    {

        public static void DoSomeCodeDOMStuff()
        {
            CodeCompileUnit cu = new CodeCompileUnit();
            CodeNamespace aNameSpace = new CodeNamespace();
            aNameSpace.Imports.Add(new CodeNamespaceImport("System"));
            CodeTypeDeclaration aClass = new CodeTypeDeclaration("AClass");
            CodeEntryPointMethod start = new CodeEntryPointMethod();
            CodeMethodInvokeExpression cs1 = new CodeMethodInvokeExpression( new CodeTypeReferenceExpression("Console"), "WriteLine", new CodePrimitiveExpression("Hello, world!"));

            cu.Namespaces.Add(aNameSpace);
            aNameSpace.Types.Add(aClass);
            aClass.Members.Add(start);
            start.Statements.Add(cs1);

            CSharpCodeProvider p = new CSharpCodeProvider();
            using (StreamWriter sw = new StreamWriter("HelloWorldAutogenerated.cs", false))
            {
                IndentedTextWriter tw = new IndentedTextWriter(sw, "    ");
                p.GenerateCodeFromCompileUnit(cu, tw, new CodeGeneratorOptions());
                tw.Close();
            }

        }
    }
}
